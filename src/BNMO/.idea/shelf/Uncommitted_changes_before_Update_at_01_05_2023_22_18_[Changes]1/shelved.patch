Index: src/main/java/com/kon/bnmo/CheckoutTab.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.kon.bnmo;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.stage.Stage;\r\n\r\npublic class CheckoutTab extends Application {\r\n\r\n    @Override\r\n    public void start(Stage stage) {\r\n\r\n        // Create a table to display the items in the cart\r\n        TableView<Item> table = new TableView<>();\r\n        table.setEditable(true);\r\n        table.setPrefWidth(400);\r\n\r\n        // Define the columns of the table\r\n        TableColumn<Item, String> nameCol = new TableColumn<>(\"Name\");\r\n        nameCol.setCellValueFactory(new PropertyValueFactory<>(\"name\"));\r\n        TableColumn<Item, Double> priceCol = new TableColumn<>(\"Price\");\r\n        priceCol.setCellValueFactory(new PropertyValueFactory<>(\"price\"));\r\n        TableColumn<Item, Integer> quantityCol = new TableColumn<>(\"Quantity\");\r\n        quantityCol.setCellValueFactory(new PropertyValueFactory<>(\"quantity\"));\r\n        TableColumn<Item, Double> subtotalCol = new TableColumn<>(\"Subtotal\");\r\n        subtotalCol.setCellValueFactory(new PropertyValueFactory<>(\"subtotal\"));\r\n\r\n        // Add the columns to the table\r\n        table.getColumns().addAll(nameCol, priceCol, quantityCol, subtotalCol);\r\n\r\n        // Create a label to display the total price of the items in the cart\r\n        Label totalLabel = new Label(\"Total: $0.00\");\r\n\r\n        // Create a button to remove the selected item from the cart\r\n        Button removeButton = new Button(\"Remove\");\r\n        removeButton.setOnAction(event -> {\r\n            Item selectedItem = table.getSelectionModel().getSelectedItem();\r\n            if (selectedItem != null) {\r\n                table.getItems().remove(selectedItem);\r\n            }\r\n        });\r\n\r\n        // Create a button to clear the cart\r\n        Button clearButton = new Button(\"Clear\");\r\n        clearButton.setOnAction(event -> {\r\n            table.getItems().clear();\r\n            totalLabel.setText(\"Total: $0.00\");\r\n        });\r\n\r\n        // Create a horizontal box to hold the buttons\r\n        HBox buttonBox = new HBox(removeButton, clearButton);\r\n        buttonBox.setSpacing(10);\r\n\r\n        // Create a border pane to hold the table and the buttons\r\n        BorderPane root = new BorderPane();\r\n        root.setCenter(table);\r\n        root.setBottom(new HBox(totalLabel, buttonBox));\r\n        root.setPrefSize(500, 400);\r\n\r\n        // Create a scene and add it to the stage\r\n        Scene scene = new Scene(root);\r\n        stage.setScene(scene);\r\n        stage.setTitle(\"Checkout Tab Example\");\r\n        stage.show();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/kon/bnmo/CheckoutTab.java b/src/main/java/com/kon/bnmo/CheckoutTab.java
--- a/src/main/java/com/kon/bnmo/CheckoutTab.java	
+++ b/src/main/java/com/kon/bnmo/CheckoutTab.java	
@@ -66,7 +66,7 @@
         // Create a scene and add it to the stage
         Scene scene = new Scene(root);
         stage.setScene(scene);
-        stage.setTitle("Checkout Tab Example");
+        stage.setTitle("Checkout");
         stage.show();
     }
 
Index: src/main/java/com/kon/bnmo/HelloApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.kon.bnmo;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.*;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class HelloApplication extends Application {\r\n    @Override\r\n    public void start(Stage primaryStage) throws Exception {\r\n\r\n        MenuButton dropdownMenu = new MenuButton(\"Pilih Menu\");\r\n        \r\n        MenuItem menuItem1 = new MenuItem(\"Menu 1\");\r\n        TabPane tabPane = new TabPane();\r\n\r\n        menuItem1.setOnAction(event -> {\r\n            Tab tab = new Tab(\"Tab 1\");\r\n            tab.setContent(new Label(\"Konten Tab 1\"));\r\n            tabPane.getTabs().add(tab);\r\n        });\r\n\r\n        MenuItem menuItem2 = new MenuItem(\"Menu 2\");\r\n        menuItem2.setOnAction(event -> {\r\n            Tab tab = new Tab(\"Tab 2\");\r\n            tab.setContent(new Label(\"Konten Tab 2\"));\r\n            tabPane.getTabs().add(tab);\r\n        });\r\n\r\n        dropdownMenu.getItems().addAll(menuItem1, menuItem2);\r\n\r\n        Tab tab1 = new Tab();\r\n        CustomerPage customerPage = new CustomerPage(\"hakwe\");\r\n        tab1.setText(\"Home\");\r\n        tabPane.getTabs().add(tab1);\r\n        tabPane.getTabs().add(customerPage);\r\n\r\n        BorderPane borderPane = new BorderPane();\r\n        borderPane.setCenter(tabPane);\r\n        VBox root = new VBox(dropdownMenu, tabPane);\r\n\r\n        Scene scene = new Scene(root, 800, 600);\r\n        primaryStage.setTitle(\"JavaFX Tab Example\");\r\n        primaryStage.setScene(scene);\r\n        primaryStage.show();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/kon/bnmo/HelloApplication.java b/src/main/java/com/kon/bnmo/HelloApplication.java
--- a/src/main/java/com/kon/bnmo/HelloApplication.java	
+++ b/src/main/java/com/kon/bnmo/HelloApplication.java	
@@ -38,6 +38,9 @@
         tabPane.getTabs().add(tab1);
         tabPane.getTabs().add(customerPage);
 
+        Settings settingsPage = new Settings();
+        tabPane.getTabs().add(settingsPage);
+
         BorderPane borderPane = new BorderPane();
         borderPane.setCenter(tabPane);
         VBox root = new VBox(dropdownMenu, tabPane);
Index: .idea/uiDesigner.xml
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
deleted file mode 100644
--- a/.idea/uiDesigner.xml	
+++ /dev/null	
@@ -1,124 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Palette2">
-    <group name="Swing">
-      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
-      </item>
-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
-        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
-        <initial-values>
-          <property name="text" value="Button" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="RadioButton" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="CheckBox" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="Label" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
-          <preferred-size width="-1" height="20" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
-      </item>
-    </group>
-  </component>
-</project>
\ No newline at end of file
Index: ../../.idea/misc.xml
===================================================================
diff --git a/../../.idea/misc.xml b/../../.idea/misc.xml
deleted file mode 100644
--- a/../../.idea/misc.xml	
+++ /dev/null	
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectRootManager">
-    <output url="file://$PROJECT_DIR$/out" />
-  </component>
-</project>
\ No newline at end of file
Index: ../../.idea/.gitignore
===================================================================
diff --git a/../../.idea/.gitignore b/../../.idea/.gitignore
deleted file mode 100644
--- a/../../.idea/.gitignore	
+++ /dev/null	
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: ../../.idea/modules.xml
===================================================================
diff --git a/../../.idea/modules.xml b/../../.idea/modules.xml
deleted file mode 100644
--- a/../../.idea/modules.xml	
+++ /dev/null	
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/Tubes2.iml" filepath="$PROJECT_DIR$/.idea/Tubes2.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	
+++ /dev/null	
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: ../../.idea/Tubes2.iml
===================================================================
diff --git a/../../.idea/Tubes2.iml b/../../.idea/Tubes2.iml
deleted file mode 100644
--- a/../../.idea/Tubes2.iml	
+++ /dev/null	
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: ../../.idea/vcs.xml
===================================================================
diff --git a/../../.idea/vcs.xml b/../../.idea/vcs.xml
deleted file mode 100644
--- a/../../.idea/vcs.xml	
+++ /dev/null	
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: src/main/java/com/kon/bnmo/Settings.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/kon/bnmo/Settings.java b/src/main/java/com/kon/bnmo/Settings.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/kon/bnmo/Settings.java	
@@ -0,0 +1,84 @@
+package com.kon.bnmo;
+
+import javafx.geometry.Insets;
+import javafx.geometry.Pos;
+import javafx.scene.control.Button;
+import javafx.scene.control.Label;
+import javafx.scene.control.Tab;
+import javafx.scene.control.TextField;
+import javafx.scene.layout.GridPane;
+import javafx.scene.layout.HBox;
+import javafx.scene.layout.VBox;
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.PrintWriter;
+import javafx.scene.control.Alert;
+
+public class Settings extends Tab {
+
+    private TextField directoryField;
+    private TextField formatField;
+
+    public Settings() {
+        this.setText("Settings");
+
+        // create UI elements
+        Label directoryLabel = new Label("File Directory:");
+        directoryField = new TextField();
+        directoryField.setPromptText("Enter directory path");
+
+        Label formatLabel = new Label("File Format:");
+        formatField = new TextField();
+        formatField.setPromptText("Enter file format");
+
+        Button saveButton = new Button("Save");
+
+        // create layout
+        GridPane gridPane = new GridPane();
+        gridPane.setHgap(10);
+        gridPane.setVgap(10);
+        gridPane.setPadding(new Insets(10, 10, 10, 10));
+        gridPane.setAlignment(Pos.CENTER);
+
+        gridPane.add(directoryLabel, 0, 0);
+        gridPane.add(directoryField, 1, 0);
+        gridPane.add(formatLabel, 0, 1);
+        gridPane.add(formatField, 1, 1);
+
+        HBox buttonBox = new HBox();
+        buttonBox.setAlignment(Pos.CENTER_RIGHT);
+        buttonBox.getChildren().add(saveButton);
+        gridPane.add(buttonBox, 1, 2);
+
+        VBox vbox = new VBox();
+        vbox.getChildren().addAll(gridPane);
+        this.setContent(vbox);
+
+        File storageLocation = new File("C:\\Data");
+        // set save button action
+        saveButton.setOnAction(event -> {
+            String directory = directoryField.getText();
+            String format = formatField.getText();
+
+            // save directory and format to settings file or database
+            File settingsFile = new File("settings.txt");
+            try (PrintWriter writer = new PrintWriter(settingsFile)) {
+                writer.println("Directory:" + storageLocation.getAbsolutePath());
+            } catch (FileNotFoundException e) {
+                e.printStackTrace();
+            }
+
+
+
+            // show confirmation message
+            Alert alert = new Alert(Alert.AlertType.INFORMATION);
+            alert.setTitle("Settings Saved");
+            alert.setHeaderText(null);
+            alert.setContentText("Your settings have been saved successfully.");
+            alert.showAndWait();
+        });
+    }
+
+}
+
+
